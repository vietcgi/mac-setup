default_language_version:
  python: python3.14
repos:
- hooks:
  - id: check-json
    name: Check JSON files are valid
  - args:
    - --unsafe
    id: check-yaml
    name: Check YAML files are valid
  - id: check-toml
    name: Check TOML files are valid
  - id: check-xml
    name: Check XML files are valid
  - id: trailing-whitespace
    name: Trim trailing whitespace
  - id: end-of-file-fixer
    name: Fix end of file
  - args:
    - --fix=lf
    id: mixed-line-ending
    name: Fix mixed line endings
  - id: detect-private-key
    name: Detect private keys
  - id: check-merge-conflict
    name: Check for merge conflicts
  - args:
    - --maxkb=102400
    id: check-added-large-files
    name: Prevent large file commits
  - id: debug-statements
    name: Check for debug statements
  - id: check-ast
    name: Check Python AST syntax
  repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.5.0
- hooks:
  - args:
    - --profile=black
    - --line-length=100
    files: ^cli/
    id: isort
    name: Sort and organize imports
  repo: https://github.com/PyCQA/isort
  rev: 5.13.2
- hooks:
  - args:
    - --ignore=PTH123,FURB101,FURB103,G004,TRY401,TRY003,PLC0415,T201,RUF012,TRY300,PLR6301,PLR0911,FBT001,FBT002,ANN401,PERF401,S324,S603,S607,S404,DTZ005,N802,B007,I001,F822,RUF100,ARG002,ARG004,N818
    - --config=pyproject.toml
    files: ^cli/
    id: ruff
    name: Lint Python code (Ruff)
  - args:
    - --line-length=100
    - --config=pyproject.toml
    files: ^cli/
    id: ruff-format
    name: Format Python code (Ruff)
  repo: https://github.com/astral-sh/ruff-pre-commit
  rev: v0.6.9
- hooks:
  - additional_dependencies:
    - types-PyYAML>=6.0.12
    - types-requests>=2.31.0
    - types-setuptools>=68.0.0
    args:
    - --config-file=mypy.ini
    - --warn-unused-ignores
    - --pretty
    files: ^cli/
    id: mypy
    name: Type check with mypy (STRICT)
  repo: https://github.com/pre-commit/mirrors-mypy
  rev: v1.11.1
- hooks:
  - additional_dependencies:
    - pbr
    args:
    - --severity-level=medium
    - -r
    - cli/
    files: ^cli/
    id: bandit
    name: Security scan (Bandit)
    types:
    - python
  repo: https://github.com/PyCQA/bandit
  rev: 1.7.5
- hooks:
  - args:
    - --disable=too-many-arguments,too-many-branches,too-many-locals,too-many-statements,logging-fstring-interpolation,undefined-all-variable,import-outside-toplevel,too-few-public-methods,duplicate-code,no-member,invalid-unary-operand-type,too-many-return-statements,unused-argument,redefined-outer-name,pointless-statement,expression-not-assigned,invalid-name,import-error
    - --max-line-length=100
    files: ^cli/
    id: pylint
    name: Comprehensive linting (pylint)
    require_serial: true
    types:
    - python
  repo: https://github.com/pylint-dev/pylint
  rev: v3.0.2
- hooks:
  - args:
    - --severity=warning
    id: shellcheck
    name: Check shell scripts (ShellCheck)
    types:
    - shell
  repo: https://github.com/shellcheck-py/shellcheck-py
  rev: v0.10.0.1
- hooks:
  - args:
    - --config-file=.yamllint
    - --format=parsable
    id: yamllint
    name: Lint YAML files (yamllint)
    types:
    - yaml
  repo: https://github.com/adrienverge/yamllint
  rev: v1.35.1
- hooks:
  - args:
    - --fix
    - --config=.markdownlint.json
    id: markdownlint
    name: Lint Markdown (markdownlint)
    types:
    - markdown
  repo: https://github.com/igorshubovych/markdownlint-cli
  rev: v0.40.0
- hooks:
  - args:
    - --config=pyproject.toml
    files: ^cli/
    id: pydocstyle
    name: Check docstring conventions (pydocstyle)
    types:
    - python
  repo: https://github.com/PyCQA/pydocstyle
  rev: 6.3.0
- hooks:
  - entry: bash -c 'radon cc -x B --no-assert cli/'
    id: radon-cc
    language: system
    name: Check cyclomatic complexity (Radon)
    pass_filenames: false
    stages:
    - commit
  - entry: bash -c 'radon mi -n B cli/'
    id: radon-mi
    language: system
    name: Check maintainability index (Radon)
    pass_filenames: false
    stages:
    - commit
  repo: local
