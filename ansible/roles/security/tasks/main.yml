# Security role - SSH, GPG, audit logging, hardening

- name: Set variables
  ansible.builtin.set_fact:
    home_dir: "{{ lookup('env', 'HOME') or '/root' }}"

- name: SSH Key Setup
  block:
    - name: Create SSH directory
      ansible.builtin.file:
        path: "{{ home_dir }}/.ssh"
        state: directory
        mode: '0700'
      tags: [security, ssh]

    - name: Check if SSH key exists
      ansible.builtin.stat:
        path: "{{ home_dir }}/.ssh/id_ed25519"
      register: ssh_key_check
      tags: [security, ssh]

    - name: Generate SSH key (ed25519)
      ansible.builtin.shell: |
        ssh-keygen -t ed25519 -f {{ home_dir }}/.ssh/id_ed25519 -N "" -C "$(whoami)@$(hostname)"
      args:
        executable: /bin/bash
      when: not ssh_key_check.stat.exists
      tags: [security, ssh]

    - name: Set SSH key permissions
      ansible.builtin.file:
        path: "{{ home_dir }}/.ssh/id_ed25519"
        mode: '0600'
      tags: [security, ssh]

    - name: Create SSH config
      ansible.builtin.copy:
        content: |
          # SSH Configuration
          # Generated by devkit

          # Global settings
          Host *
            AddKeysToAgent yes
            UseKeychain yes
            IdentityFile ~/.ssh/id_ed25519
            ServerAliveInterval 60
            ServerAliveCountMax 10
            HashKnownHosts yes
            VisualHostKey no

          # Security settings
          Host *
            PasswordAuthentication no
            PubkeyAuthentication yes
            StrictHostKeyChecking accept-new
            UserKnownHostsFile ~/.ssh/known_hosts
            LogLevel VERBOSE

        dest: "{{ home_dir }}/.ssh/config"
        mode: '0644'
        backup: yes
      tags: [security, ssh, config]

    - name: Display SSH public key
      ansible.builtin.shell: cat {{ home_dir }}/.ssh/id_ed25519.pub
      register: ssh_public_key
      changed_when: false
      tags: [security, ssh]

    - name: Save SSH public key to file
      ansible.builtin.copy:
        content: "{{ ssh_public_key.stdout }}\n"
        dest: "{{ home_dir }}/.ssh/id_ed25519.pub"
        mode: '0644'
      tags: [security, ssh]

  when: enable_ssh_setup | default(false)
  tags: [security, ssh]

- name: GPG Key Setup
  block:
    - name: Check if GPG key exists
      ansible.builtin.shell: gpg --list-secret-keys | grep -q uid
      args:
        executable: /bin/bash
      register: gpg_key_check
      failed_when: false
      changed_when: false
      tags: [security, gpg]

    - name: Create GPG batch file for key generation
      ansible.builtin.copy:
        content: |
          %echo Generating GPG key
          Key-Type: EdDSA
          Key-Curve: Ed25519
          Name-Real: {{ ansible_user_id }}
          Name-Email: {{ ansible_user_id }}@{{ ansible_hostname }}
          Expire-Date: 0
          %no-protection
          %commit
          %echo done

        dest: /tmp/gpg_batch
        mode: '0600'
      when: gpg_key_check.rc != 0
      tags: [security, gpg]

    - name: Generate GPG key
      ansible.builtin.shell: gpg --batch --generate-key /tmp/gpg_batch
      when: gpg_key_check.rc != 0
      tags: [security, gpg]

    - name: Clean up batch file
      ansible.builtin.file:
        path: /tmp/gpg_batch
        state: absent
      tags: [security, gpg]

    - name: Export GPG public key
      ansible.builtin.shell: gpg --armor --export {{ ansible_user_id }} > {{ home_dir }}/.gpg_public_key.asc
      args:
        executable: /bin/bash
      changed_when: false
      tags: [security, gpg]

  when: enable_gpg_setup | default(false)
  tags: [security, gpg]

- name: Audit Logging
  block:
    - name: Create audit log directory
      ansible.builtin.file:
        path: "{{ home_dir }}/.devkit/logs/audit"
        state: directory
        mode: '0755'
      tags: [security, audit]

    - name: Initialize audit log
      ansible.builtin.copy:
        content: |
          # Audit Log
          # Setup started: {{ ansible_date_time.iso8601 }}
          # User: {{ ansible_user_id }}
          # Hostname: {{ ansible_hostname }}
          # OS: {{ ansible_os_family }}

        dest: "{{ home_dir }}/.devkit/logs/audit/setup.log"
        mode: '0644'
      tags: [security, audit]

    - name: Configure shell audit logging
      ansible.builtin.lineinfile:
        path: "{{ home_dir }}/.zshrc"
        line: "export HISTFILE=~/.bash_history"
        state: present
        create: yes
      when: shell_choice | default('zsh') == 'zsh'
      tags: [security, audit]

  when: enable_audit_logging | default(true)
  tags: [security, audit]

- name: System Hardening
  block:
    - name: Check sudo configuration
      ansible.builtin.stat:
        path: /etc/sudoers
      register: sudoers_check
      tags: [security, sudoers]

    - name: Configure passwordless sudo (optional)
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        state: present
        line: "{{ ansible_user_id }} ALL=(ALL) NOPASSWD:ALL"
        validate: '/usr/sbin/visudo -cf %s'
      become: yes
      when:
        - enable_passwordless_sudo | default(false)
        - sudoers_check.stat.exists
      tags: [security, sudoers]

    - name: File permission hardening
      ansible.builtin.file:
        path: "{{ item }}"
        mode: '0600'
      loop:
        - "{{ home_dir }}/.ssh"
        - "{{ home_dir }}/.gnupg"
        - "{{ home_dir }}/.bash_history"
      failed_when: false
      tags: [security, permissions]

  tags: [security, hardening]

- name: Security Verification
  block:
    - name: Verify SSH keys
      ansible.builtin.shell: ls -la {{ home_dir }}/.ssh/id_ed25519
      register: ssh_verify
      changed_when: false
      when: enable_ssh_setup | default(false)
      tags: [security, ssh, verify]

    - name: Verify GPG key
      ansible.builtin.shell: gpg --list-secret-keys
      register: gpg_verify
      changed_when: false
      when: enable_gpg_setup | default(false)
      tags: [security, gpg, verify]

    - name: Display security summary
      ansible.builtin.debug:
        msg: |
          Security Setup Summary:
          - SSH keys: {{ "✓" if enable_ssh_setup else "✗" }}
          - GPG keys: {{ "✓" if enable_gpg_setup else "✗" }}
          - Audit logging: {{ "✓" if enable_audit_logging else "✗" }}
      tags: [security, summary]

  tags: [security, verify]
