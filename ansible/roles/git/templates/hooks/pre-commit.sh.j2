#!/bin/bash
# Git Pre-Commit Hook
# {{ ansible_managed }}
# Runs before commit is made, can prevent commit if it fails

set -e

REPO_ROOT=$(git rev-parse --show-toplevel)
HOOKS_DIR=$(git config core.hooksPath)
EXIT_CODE=0

# Color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "🔍 Running pre-commit checks..."

# Check for trailing whitespace
if {{ git_pre_commit_checks.trailing_whitespace | lower }}; then
    echo -n "   Checking for trailing whitespace... "
    if git diff --cached --name-only -z | xargs -0 grep -l '[[:space:]]$' 2>/dev/null; then
        echo -e "${RED}✗ Found trailing whitespace${NC}"
        EXIT_CODE=1
    else
        echo -e "${GREEN}✓${NC}"
    fi
fi

# Check for large files
if {{ git_pre_commit_checks.large_files | lower }}; then
    echo -n "   Checking for large files... "
    LARGE_FILES=$(git diff --cached --name-only | while read file; do
        if [ -f "$REPO_ROOT/$file" ]; then
            SIZE=$(stat -f%z "$REPO_ROOT/$file" 2>/dev/null || stat -c%s "$REPO_ROOT/$file" 2>/dev/null || echo 0)
            # 10MB limit
            if [ "$SIZE" -gt 10485760 ]; then
                echo "$file"
            fi
        fi
    done)

    if [ -n "$LARGE_FILES" ]; then
        echo -e "${RED}✗ Found large files:${NC}"
        echo "$LARGE_FILES" | sed 's/^/     /'
        EXIT_CODE=1
    else
        echo -e "${GREEN}✓${NC}"
    fi
fi

# Syntax checks (if available)
if {{ git_pre_commit_checks.syntax_check | lower }}; then
    echo -n "   Checking syntax... "

    # Check Python files
    if command -v python3 &> /dev/null; then
        PYTHON_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.py$' || true)
        if [ -n "$PYTHON_FILES" ]; then
            python3 -m py_compile $PYTHON_FILES 2>/dev/null || EXIT_CODE=1
        fi
    fi

    echo -e "${GREEN}✓${NC}"
fi

# Allow modification by hook scripts
HOOK_SCRIPTS_DIR="$HOOKS_DIR/../scripts"
if [ -d "$HOOK_SCRIPTS_DIR" ]; then
    for script in "$HOOK_SCRIPTS_DIR"/pre-commit-*.sh; do
        if [ -x "$script" ]; then
            echo "   Running custom pre-commit hook: $(basename $script)"
            if "$script"; then
                echo -e "     ${GREEN}✓${NC}"
            else
                echo -e "     ${RED}✗${NC}"
                EXIT_CODE=1
            fi
        fi
    done
fi

if [ $EXIT_CODE -eq 0 ]; then
    echo -e "${GREEN}✓ Pre-commit checks passed${NC}"
else
    echo -e "${RED}✗ Pre-commit checks failed${NC}"
    echo "Commit aborted. Fix the issues above and try again."
fi

exit $EXIT_CODE
